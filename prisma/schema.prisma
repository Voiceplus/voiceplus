generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows", "darwin-arm64"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Guild {
  id         String      @id @map("_id")
  language   String      @default("en")
  voices     Voice[]
  blacklists Blacklist[]
  toggles    Toggle[]
  configs    Config[]
  setups     Setup[]
}

model Setup {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  guildId          String
  creatorChannelId String @unique
  categoryId       String

  guild Guild @relation(fields: [guildId], references: [id], onDelete: Cascade)
}

model Voice {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  guildId          String
  ownerId          String
  channelId        String @unique
  panelMessage     String
  creatorChannelId String?

  guild   Guild    @relation(fields: [guildId], references: [id], onDelete: Cascade)
  invites Invite[]

  @@unique([guildId, ownerId])
}

model Invite {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  guildId   String
  channelId String @db.ObjectId
  inviterId String @db.ObjectId
  inviteeId String @db.ObjectId
  voice     Voice  @relation(fields: [channelId], references: [id], onDelete: Cascade)
}

model Blacklist {
  id      String  @id @default(auto()) @map("_id") @db.ObjectId
  userId  String?
  guildId String?
  reason  String
  sent    Boolean @default(false)
  date    BigInt

  guild Guild? @relation(fields: [guildId], references: [id], onDelete: Cascade)

  @@unique([userId, guildId])
}

model Toggle {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  guildId  String
  name     Boolean
  limit    Boolean
  bitrate  Boolean
  nsfw     Boolean
  claim    Boolean
  lock     Boolean
  unlock   Boolean
  permit   Boolean
  reject   Boolean
  invite   Boolean
  hide     Boolean
  unhide   Boolean
  transfer Boolean
  guild    Guild   @relation(fields: [guildId], references: [id], onDelete: Cascade)
}

model Config {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  guildId      String
  userId       String
  channelName  String
  channelLimit Int
  isLocked     Boolean @default(false)
  isHidden     Boolean @default(false)
  guild        Guild   @relation(fields: [guildId], references: [id], onDelete: Cascade)

  @@unique([guildId, userId])
}

model Staff {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  userId   String @unique
  position String
  bio      String
}
